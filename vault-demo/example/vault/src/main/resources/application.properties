mqtt.broker=
mqtt.username=
mqtt.password=
quarkus.devservices.enabled=false
quarkus.tls.trust-all=true

quarkus.vault.authentication.client-token=hvs.CAESIIDXLAV0-_yh1VJjVQkDxojDEP54lTfT0Y-UsVEBJKBhGh4KHGh2cy5lRFRMeFpBSmpGMGo2ZXRNR0RsTDh3UmI
quarkus.vault.url=https://vault-demo.cch.com:8453
quarkus.vault.kv-secret-engine-mount-path=kv
quarkus.vault.secret-config-kv-path=quarkus/vault-demo
quarkus.vault.kv-secret-engine-version=2


quarkus.container-image.group=cch0124
quarkus.container-image.name=${quarkus.application.name:unset}
quarkus.container-image.tag=${quarkus.application.version:latest}
quarkus.container-image.registry=registry.hub.docker.com
quarkus.container-image.builder=jib
quarkus.container-image.build=false
quarkus.container-image.push=false
quarkus.container-image.labels."maintainer"=cch
quarkus.container-image.labels."app"=${quarkus.application.name}
quarkus.jib.base-native-image=quay.io/quarkus/quarkus-micro-image:2.0

quarkus.kubernetes.deployment-kind=Deployment
quarkus.kubernetes.part-of=${quarkus.application.name}
quarkus.kubernetes.name=${quarkus.container-image.name}
quarkus.kubernetes.version=${quarkus.container-image.tag}
quarkus.kubernetes.component=API
quarkus.kubernetes.add-build-timestamp=true
%prod.quarkus.kubernetes.namespace=prod
%stage.quarkus.kubernetes.namespace=stage
%dev.quarkus.kubernetes.namespace=dev
quarkus.kubernetes.service-account=${quarkus.application.name:unset}
quarkus.kubernetes.replicas=1
quarkus.kubernetes.service-type=cluster-ip
quarkus.kubernetes.image-pull-policy=always
#if-not-present
quarkus.kubernetes.add-version-to-label-selectors=true
quarkus.kubernetes.add-name-to-label-selectors=true



quarkus.kubernetes.liveness-probe.http-action-path=/q/health/live
quarkus.kubernetes.liveness-probe.initial-delay=60s
quarkus.kubernetes.liveness-probe.period=20s
quarkus.kubernetes.liveness-probe.timeout=3s
quarkus.kubernetes.liveness-probe.success-threshold=1
quarkus.kubernetes.liveness-probe.failure-threshold=3
quarkus.kubernetes.liveness-probe.http-action-port-name=http
quarkus.kubernetes.liveness-probe.http-action-scheme=http


quarkus.kubernetes.readiness-probe.http-action-path=/q/health/ready
quarkus.kubernetes.readiness-probe.initial-delay=60s
quarkus.kubernetes.readiness-probe.period=20s
quarkus.kubernetes.readiness-probe.timeout=3s
quarkus.kubernetes.readiness-probe.success-threshold=1
quarkus.kubernetes.readiness-probe.failure-threshold=3
quarkus.kubernetes.readiness-probe.http-action-scheme=http
quarkus.kubernetes.readiness-probe.http-action-port-name=http



# limits
quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=10m
quarkus.kubernetes.resources.limits.memory=128Mi
quarkus.kubernetes.resources.limits.cpu=100m

# Ingress
# service will be exposed
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=vault-demo.cch.com
quarkus.kubernetes.ingress.annotations."nginx.ingress.kubernetes.io/rewrite-target"=/$2
quarkus.kubernetes.ingress.ingress-class-name=nginx
quarkus.kubernetes.ingress.rules.0.host=vault-demo.cch.com
quarkus.kubernetes.ingress.rules.0.path=/api/v1(/|$)(.*)
quarkus.kubernetes.ingress.rules.0.path-type=Prefix
quarkus.kubernetes.ingress.rules.0.service-name=${quarkus.container-image.name}
quarkus.kubernetes.ingress.rules.0.service-port-name=http
quarkus.kubernetes.ingress.rules.0.service-port-number=${quarkus.kubernetes.ports.http.container-port:quarkus.http.port}


quarkus.kubernetes.security-context.run-as-user=185
quarkus.kubernetes.security-context.run-as-group=185
quarkus.kubernetes.security-context.run-as-non-root=true
quarkus.kubernetes.security-context.fs-group=185
quarkus.kubernetes.container-name=${quarkus.application.name}


quarkus.kubernetes.ports.http.container-port=8080
quarkus.kubernetes.ports.http.path=/api/v1(/|$)(.*)
quarkus.kubernetes.ports.http.protocol=tcp
quarkus.kubernetes.ports.http.host-port=8080
#quarkus.config.locations=/opt/config/application.properties
quarkus.mongodb.connection-string=${MONGO_HOST}
quarkus.mongodb.database=${MONGO_DATABASE_NAME}
quarkus.mongodb.credentials.username=${MONGO_USERNAME}
quarkus.mongodb.credentials.password=${MONGO_PASSWORD}
quarkus.mongodb.credentials.auth-source=${MONGO_AUTH_SOURCE}
quarkus.log.category."io.quarkus.mongodb.panache.runtime".level=DEBUG

mqtt.connect.client-keystore=kubernetes/emqx/keystore/truststore.p12
mqtt.connect.client-keypass=1qaz@WSX
mqtt.connect.trust-keystore=kubernetes/emqx/keystore/keystore.jks
mqtt.connect.trust-keypass=1qaz@WSX
mqtt.connect.broker-url=emqx.dev.svc.cluster.local
mqtt.connect.topic=cmd/state/+

time.period=1000

quarkus.container-image.group=cch0124
quarkus.container-image.name=${quarkus.application.name:unset}
quarkus.container-image.tag=${quarkus.application.version:latest}
quarkus.container-image.registry=registry.hub.docker.com
quarkus.container-image.push=false
quarkus.container-image.build=false
quarkus.container-image.builder=jib
quarkus.container-image.labels=maintainer='cch'\\,app='kubernetes-with-quarkus'
quarkus.jib.base-native-image=quay.io/quarkus/quarkus-micro-image:2.0
quarkus.jib.native-arguments=-Djava.util.logging.manager=org.jboss.logmanager.LogManager
# quarkus.jib.working-directory=/home/jboss

quarkus.kubernetes.deployment-kind=Deployment
quarkus.kubernetes.part-of=${quarkus.application.name}
quarkus.kubernetes.name=${quarkus.container-image.name}
quarkus.kubernetes.version=${quarkus.container-image.tag}
quarkus.kubernetes.component=API
quarkus.kubernetes.add-build-timestamp=true
%prod.quarkus.kubernetes.namespace=dev
%stage.quarkus.kubernetes.namespace=dev
%dev.quarkus.kubernetes.namespace=dev
quarkus.kubernetes.service-account=${quarkus.container-image.name}
quarkus.kubernetes.replicas=1
quarkus.kubernetes.service-type=cluster-ip
quarkus.kubernetes.image-pull-policy=always
#if-not-present
quarkus.kubernetes.add-version-to-label-selectors=true
quarkus.kubernetes.add-name-to-label-selectors=true



quarkus.kubernetes.liveness-probe.http-action-path=/q/health/live
quarkus.kubernetes.liveness-probe.initial-delay=60s
quarkus.kubernetes.liveness-probe.period=20s
quarkus.kubernetes.liveness-probe.timeout=3s
quarkus.kubernetes.liveness-probe.success-threshold=1
quarkus.kubernetes.liveness-probe.failure-threshold=3

quarkus.kubernetes.readiness-probe.http-action-path=/q/health/ready
quarkus.kubernetes.readiness-probe.initial-delay=60s
quarkus.kubernetes.readiness-probe.period=20s
quarkus.kubernetes.readiness-probe.timeout=3s
quarkus.kubernetes.readiness-probe.success-threshold=1
quarkus.kubernetes.readiness-probe.failure-threshold=3

quarkus.kubernetes.prometheus.annotations=true
# https://github.com/prometheus/prometheus/blob/main/documentation/examples/prometheus-kubernetes.yml
quarkus.kubernetes.prometheus.prefix=prometheus.io
#quarkus.kubernetes.prometheus.scrape=
#quarkus.kubernetes.prometheus.path=/q/metrics
#quarkus.kubernetes.prometheus.port=8080
#quarkus.kubernetes.prometheus.scheme=http

# mount
quarkus.kubernetes.mounts.mqtt-cert.name=mqtt-cert
quarkus.kubernetes.mounts.mqtt-cert.path=/opt/emqx
quarkus.kubernetes.mounts.mqtt-cert.read-only=true

quarkus.kubernetes.secret-volumes.mqtt-cert.secret-name=emqx-client-cert
quarkus.kubernetes.secret-volumes.mqtt-cert.default-mode=0600
quarkus.kubernetes.secret-volumes.mqtt-cert.items."keystore.jks".path=keystore.jks
quarkus.kubernetes.secret-volumes.mqtt-cert.items."keystore.p12".path=keystore.p12


quarkus.kubernetes.mounts.app-config.name=app-config
quarkus.kubernetes.mounts.app-config.path=/home/jboss
#/opt/config/application.properties
quarkus.kubernetes.mounts.app-config.read-only=true

quarkus.kubernetes.config-map-volumes.app-config.config-map-name=app-config
quarkus.kubernetes.config-map-volumes.app-config.default-mode=0600
# Secret and ConfigMap enviroment
quarkus.kubernetes-config.enabled=true
%dev.quarkus.kubernetes-config.secrets.enabled=true
quarkus.kubernetes-config.secrets=mongodb-config
quarkus.kubernetes-config.config-maps=app-config
quarkus.kubernetes.env.secrets=mongodb-config
quarkus.kubernetes.env.mapping."mqtt.connect.client-keypass".from-secret=keystore-pkcs-secret
quarkus.kubernetes.env.mapping."mqtt.connect.client-keypass".with-key=password
quarkus.kubernetes.env.mapping."mqtt.connect.trust-keypass".from-secret=keystore-jks-secret
quarkus.kubernetes.env.mapping."mqtt.connect.trust-keypass".with-key=password
quarkus.kubernetes-config.namespace=${quarkus.kubernetes.namespace}


# limits
quarkus.kubernetes.resources.requests.memory=64Mi
quarkus.kubernetes.resources.requests.cpu=250m
quarkus.kubernetes.resources.limits.memory=512Mi
quarkus.kubernetes.resources.limits.cpu=1000m

# Ingress
# service will be exposed
quarkus.kubernetes.ingress.expose=true
quarkus.kubernetes.ingress.host=k8s.cch.dev
quarkus.kubernetes.ingress.annotations."nginx.ingress.kubernetes.io/rewrite-target"=/$2
# quarkus.kubernetes.ingress.tls.${SECRET_NAME}.enabled=true
# quarkus.kubernetes.ingress.tls.${SECRET_NAME}.hosts=k8s.cch.dev
quarkus.kubernetes.ingress.rules.0.host=k8s.cch.dev
quarkus.kubernetes.ingress.rules.0.path=/api/v1(/|$)(.*)
quarkus.kubernetes.ingress.rules.0.path-type=Prefix
quarkus.kubernetes.ingress.rules.0.service-name=${quarkus.container-image.name}
quarkus.kubernetes.ingress.rules.0.service-port-name=http
quarkus.kubernetes.ingress.rules.0.service-port-number=${quarkus.kubernetes.ports.http.container-port:quarkus.http.port}

# security context

quarkus.kubernetes.security-context.run-as-user=1001
quarkus.kubernetes.security-context.run-as-group=0
quarkus.kubernetes.security-context.run-as-non-root=true
quarkus.kubernetes.security-context.fs-group=0
quarkus.kubernetes.container-name=${quarkus.application.name}

# defined k8s container info 會關連到 Service 類型資源
quarkus.kubernetes.ports.http.container-port=8080
quarkus.kubernetes.ports.http.path=/api/v1(/|$)(.*)
quarkus.kubernetes.ports.http.protocol=tcp
quarkus.kubernetes.ports.http.host-port=8080


quarkus.helm.name=${quarkus.application.name}
quarkus.helm.home=https://github.com/CCH0124/quarkus-demo
quarkus.helm.sources=https://github.com/CCH0124/quarkus-demo
quarkus.helm.version=${quarkus.application.version:latest}


#  Quarkus will attempt to deploy the application to the target Kubernetes cluster
quarkus.kubernetes.deploy=true
quarkus.kubernetes.deployment-target=kubernetes